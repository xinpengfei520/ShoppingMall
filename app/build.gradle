apply plugin: 'com.android.application'
apply plugin: 'bugly'

bugly {
    // 注册时分配的 App ID
    appId = 'a49bb24dcd'
    // 注册时分配的 App Key
    appKey = 'fae97c5e-b65a-46fd-a883-8c09a4900ce0'
}

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.atguigu.shoppingmall"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("signature.jks")
            storePassword 'android'
            keyAlias 'android'
            keyPassword 'android'
        }
        release {
            storeFile file("signature.jks")
            storePassword 'android'
            keyAlias 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = getApkName()
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation('com.jakewharton:butterknife:8.8.1', {
        exclude group: "com.android.support"
    })
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.zhy:okhttputils:2.6.2'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.zhy:magic-viewpager:1.0.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.alibaba:fastjson:1.1.54.android'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.youth.banner:banner:1.4.10'
    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation project(':QRCode_lib')
    implementation project(':OpenDanmu_lib')
    implementation project(':FlycoTabLayout_lib')
    implementation project(':ViewPagerIndicator_lib')
}

def getApkFullPath() {
    return rootDir.getAbsolutePath() + "/app/build/outputs/apk/release/" + getApkName()
}

def getApkName() {
    return "ShoppingMall-V${android.defaultConfig.versionName}-${releaseTime()}.apk"
}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def readProperties(key) {
    File file = rootProject.file('local.properties')
    if (file.exists()) {
        InputStream inputStream = rootProject.file('local.properties').newDataInputStream()
        Properties properties = new Properties()
        properties.load(inputStream)

        if (properties.containsKey(key)) {
            return properties.getProperty(key)
        }
    }
}

static def getUpdateDescription() {
    return '1.提升用户体验;\n2.修复一些bug;'
}

task("uploadApk") {
    doLast {
        def command = "curl -F \"file=@${getApkFullPath()}\" -F \"uKey=${readProperties('pgyer.userKey')}\" -F \"_api_key=${readProperties('pgyer.apiKey')}\" -F \"buildUpdateDescription=${getUpdateDescription()}\" https://www.pgyer.com/apiv2/app/upload"
        println "command:" + command

        try {
            exec {
                ExecSpec execSpec ->
                    executable 'bash'
                    args '-c', command
            }
            println "uploadApk success~"
        } catch (Exception e) {
            e.printStackTrace()
        }
    }
}

uploadApk.dependsOn("assembleRelease")

/*
 * 打包命令：
 * ./gradlew assembleRelease
 * 打包上传 APK:
 * ./gradlew :app:uploadApk
 */